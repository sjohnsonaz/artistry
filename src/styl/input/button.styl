@require 'input-settings.styl';

.button {
    display: inline-block;
    padding: $input-padding;
    border-width: $input-border-width;
    border-style: solid;
    border-radius: $input-border-radius;
    text-decoration: none;
    text-align: center;
    cursor: pointer;
    user-select: none;
    transition: opacity 0.3s, box-shadow 0.3s;
    // Added for consistency between Button and A tags.
    font-size: 100%;
    line-height: 1.15;

    &.button-small {
        padding: $input-padding-small;
    }

    &.button-large {
        padding: $input-padding-large;
    }

    &.button-locked, &:disabled {
        filter: contrast(80%) brightness(140%);
        cursor: default;
    }

    &.button-no-focus {
        outline: none;
    }

    &:not(.button-textonly):not(.button-outline) {
        border-color: $input-default-border-color;
        color: $input-default-color;
        background-color: $input-default-background-color;
        box-shadow: $input-box-shadow-height-0;

        &:hover:enabled {
            box-shadow: $input-box-shadow-height-1;
        }

        &:focus:enabled:not(.button-no-focus) {
            outline: none;
            border-color: $input-default-border-color-focus;
            color: lighten($input-default-color, $input-color-variance);
            background-color: lighten($input-default-background-color, $input-color-variance);
        }

        &:active:enabled,
        &:active:enabled:not(.button-no-focus),
        &.button-down:enabled,
        &.button-down:enabled:not(.button-no-focus) {
            color: darken($input-default-color, $input-color-variance);
            background-color: darken($input-default-background-color, $input-color-variance);
        }

        &[data-theme='primary']:enabled,
        &.button-primary:enabled {
            border: $input-border-width solid $input-primary-border-color;
            color: $input-primary-color;
            background-color: $input-primary-background-color;

            &:hover {
            }

            &:focus:not(.button-no-focus) {
                color: lighten($input-primary-color, $input-color-variance);
                background-color: lighten($input-primary-background-color, $input-color-variance);
            }

            &:active,
            &:active:not(.button-no-focus),
            &.button-down,
            &.button-down:not(.button-no-focus) {
                color: darken($input-primary-color, $input-color-variance);
                background-color: darken($input-primary-background-color, $input-color-variance);
            }
        }

        &[data-theme='danger']:enabled,
        &.button-danger:enabled {
            border: $input-border-width solid $input-danger-border-color;
            color: $input-danger-color;
            background-color: $input-danger-background-color;

            &:hover {
            }

            &:focus:not(.button-no-focus) {
                color: lighten($input-danger-color, $input-color-variance);
                background-color: lighten($input-danger-background-color, $input-color-variance);
            }

            &:active,
            &:active:not(.button-no-focus),
            &.button-down,
            &.button-down:not(.button-no-focus) {
                color: darken($input-danger-color, $input-color-variance);
                background-color: darken($input-danger-background-color, $input-color-variance);
            }
        }
    }

    &.button-textonly,
    &.button-outline {
        color: $input-textonly-default-color;
        border-color: transparent;
        background-color: transparent;
        box-shadow: none;
        font-weight: bold;

        &:hover:enabled {
            color: lighten($input-textonly-default-color, $input-color-variance);
            background-color: lighten($input-textonly-background-color, $input-color-variance);
        }

        &:focus:enabled:not(.button-no-focus) {
            outline: none;
            background-color: $input-textonly-background-color;
        }

        &:active:enabled,
        &:active:enabled:not(.button-no-focus),
        &.button-down:enabled,
        &.button-down:enabled:not(.button-no-focus) {
            color: darken($input-textonly-default-color, $input-color-variance);
            background-color: darken($input-textonly-background-color, $input-color-variance);
        }

        &[data-theme='primary']:enabled,
        &.button-primary:enabled {
            color: $input-textonly-primary-color;

            &:hover {
                color: lighten($input-textonly-primary-color, $input-color-variance);
            }

            &:focus:not(.button-no-focus) {
            }

            &:active,
            &:active:not(.button-no-focus),
            &.button-down,
            &.button-down:not(.button-no-focus) {
                color: darken($input-textonly-primary-color, $input-color-variance);
            }
        }

        &[data-theme='danger']:enabled,
        &.button-danger:enabled {
            color: $input-textonly-danger-color;

            &:hover {
                color: lighten($input-textonly-danger-color, $input-color-variance);
            }

            &:focus:not(.button-no-focus) {
            }

            &:active,
            &:active:not(.button-no-focus),
            &.button-down,
            &.button-down:not(.button-no-focus) {
                color: darken($input-textonly-danger-color, $input-color-variance);
            }
        }
    }

    &.button-outline {
        border-color: $input-outline-border-color;
        border-width: $input-outline-border-width;
    }

    &.button-lockable {
        position: relative;

        &.button-locked {
            & > .button-text {
                opacity: 0;
            }

            & > .button-spinner {
                opacity: 1;
            }
        }

        & > .button-text {
            display: block;
            opacity: 1;
            transition: opacity 0.5s;
        }

        & > .button-spinner {
            position: absolute;
            display: block;
            top: 50%;
            left: 50%;
            transform: translateX(-50%) translateY(-50%);
            opacity: 0;
            transition: opacity 0.5s;
        }
    }

    &.button-nowrap {
        white-space: nowrap;
    }
}